version: '3.8'

services:
  # Redis - Message Broker and Cache
  redis:
    image: redis:7-alpine
    container_name: justwatched-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - justwatched-network

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: justwatched-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - ./firebase-key.json:/app/firebase-key.json:ro
    networks:
      - justwatched-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: justwatched-celery-worker
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - redis
      - backend
    volumes:
      - ./firebase-key.json:/app/firebase-key.json:ro
    networks:
      - justwatched-network
    command: celery -A app.celery_worker.celery_app worker --loglevel=info --concurrency=4

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: justwatched-celery-beat
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - redis
      - backend
    volumes:
      - ./firebase-key.json:/app/firebase-key.json:ro
      - celery_beat_data:/app/celerybeat-data
    networks:
      - justwatched-network
    command: celery -A app.celery_worker.celery_app beat --loglevel=info --schedule=/app/celerybeat-data/schedule.db


  nginx:
    image: nginx:alpine
    container_name: justwatched-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - justwatched-network

volumes:
  redis_data:
  celery_beat_data:

networks:
  justwatched-network:
    driver: bridge 